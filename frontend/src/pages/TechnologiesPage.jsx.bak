import { Link } from 'react-router-dom'
import { useState } from 'react'
import { Link } from 'react-router-dom'
import { Search, TrendingUp, Code2, Briefcase } from 'lucide-react'
import { Button } from '@/components/ui/button'
import { Input } from '@/components/ui/input'
import { Card, CardContent } from '@/components/ui/card'

const technologies = [
  // Linguagens de Programação
  { name: 'JavaScript', category: 'Linguagem', jobs: 4500, trend: 'up', color: 'bg-yellow-400' },
  { name: 'Python', category: 'Linguagem', jobs: 3800, trend: 'up', color: 'bg-blue-500' },
  { name: 'Java', category: 'Linguagem', jobs: 3200, trend: 'stable', color: 'bg-red-500' },
  { name: 'TypeScript', category: 'Linguagem', jobs: 2900, trend: 'up', color: 'bg-blue-600' },
  { name: 'C#', category: 'Linguagem', jobs: 2100, trend: 'stable', color: 'bg-purple-600' },
  { name: 'PHP', category: 'Linguagem', jobs: 1800, trend: 'down', color: 'bg-indigo-500' },
  { name: 'Go', category: 'Linguagem', jobs: 1200, trend: 'up', color: 'bg-cyan-500' },
  { name: 'Ruby', category: 'Linguagem', jobs: 900, trend: 'stable', color: 'bg-red-600' },
  
  // Frameworks Frontend
  { name: 'React', category: 'Frontend', jobs: 5200, trend: 'up', color: 'bg-blue-400' },
  { name: 'Angular', category: 'Frontend', jobs: 2800, trend: 'stable', color: 'bg-red-600' },
  { name: 'Vue.js', category: 'Frontend', jobs: 2100, trend: 'up', color: 'bg-green-500' },
  { name: 'Next.js', category: 'Frontend', jobs: 1800, trend: 'up', color: 'bg-black' },
  
  // Frameworks Backend
  { name: 'Node.js', category: 'Backend', jobs: 4100, trend: 'up', color: 'bg-green-600' },
  { name: 'Spring Boot', category: 'Backend', jobs: 2400, trend: 'stable', color: 'bg-green-700' },
  { name: 'Django', category: 'Backend', jobs: 1900, trend: 'up', color: 'bg-green-800' },
  { name: '.NET', category: 'Backend', jobs: 2600, trend: 'stable', color: 'bg-purple-700' },
  
  // Bancos de Dados
  { name: 'SQL', category: 'Database', jobs: 4800, trend: 'stable', color: 'bg-orange-500' },
  { name: 'PostgreSQL', category: 'Database', jobs: 2700, trend: 'up', color: 'bg-blue-700' },
  { name: 'MongoDB', category: 'Database', jobs: 2300, trend: 'up', color: 'bg-green-600' },
  { name: 'MySQL', category: 'Database', jobs: 2100, trend: 'stable', color: 'bg-blue-600' },
  { name: 'Oracle', category: 'Database', jobs: 1800, trend: 'stable', color: 'bg-red-700' },
  
  // Cloud
  { name: 'AWS', category: 'Cloud', jobs: 3900, trend: 'up', color: 'bg-orange-600' },
  { name: 'Azure', category: 'Cloud', jobs: 3200, trend: 'up', color: 'bg-blue-600' },
  { name: 'Google Cloud', category: 'Cloud', jobs: 1800, trend: 'up', color: 'bg-blue-500' },
  
  // DevOps
  { name: 'Docker', category: 'DevOps', jobs: 3400, trend: 'up', color: 'bg-blue-500' },
  { name: 'Kubernetes', category: 'DevOps', jobs: 2800, trend: 'up', color: 'bg-blue-600' },
  { name: 'Jenkins', category: 'DevOps', jobs: 1900, trend: 'stable', color: 'bg-red-600' },
  { name: 'Terraform', category: 'DevOps', jobs: 1600, trend: 'up', color: 'bg-purple-600' },
  
  // ERP
  { name: 'SAP', category: 'ERP', jobs: 2900, trend: 'stable', color: 'bg-blue-700' },
  { name: 'Oracle ERP', category: 'ERP', jobs: 1400, trend: 'stable', color: 'bg-red-700' },
  { name: 'Protheus', category: 'ERP', jobs: 1200, trend: 'stable', color: 'bg-blue-600' },
  { name: 'Dynamics 365', category: 'ERP', jobs: 900, trend: 'up', color: 'bg-blue-500' },
]

const categories = ['Todas', 'Linguagem', 'Frontend', 'Backend', 'Database', 'Cloud', 'DevOps', 'ERP']

export default function TechnologiesPage() {
  const [searchTerm, setSearchTerm] = useState('')
  const [selectedCategory, setSelectedCategory] = useState('Todas')

  const filteredTechnologies = technologies.filter(tech => {
    const matchesSearch = tech.name.toLowerCase().includes(searchTerm.toLowerCase())
    const matchesCategory = selectedCategory === 'Todas' || tech.category === selectedCategory
    return matchesSearch && matchesCategory
  })

  const totalJobs = filteredTechnologies.reduce((sum, tech) => sum + tech.jobs, 0)

  const getTrendIcon = (trend) => {
    if (trend === 'up') return '↗️'
    if (trend === 'down') return '↘️'
    return '→'
  }

  const getTrendColor = (trend) => {
    if (trend === 'up') return 'text-green-600'
    if (trend === 'down') return 'text-red-600'
    return 'text-gray-600'
  }

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Header */}
      <header className="bg-[#1F3B47] text-white shadow-md">
        <div className="container mx-auto px-6 py-4">
          <div className="flex items-center justify-between">
            <Link to="/" className="flex items-center gap-3">
              <div className="flex items-center gap-1">
                <div className="w-10 h-10 bg-[#F7941D] rounded-full flex items-center justify-center font-bold text-white">
                  P
                </div>
                <div className="text-xl font-bold">
                  Portal <span className="text-[#F7941D]">ERP</span> Jobs
                </div>
              </div>
            </Link>
            <nav className="hidden md:flex items-center gap-6">
              <Link to={`/vagas?tech=${encodeURIComponent(tech.name)}`} className="hover:text-[#F7941D] transition-colors font-medium">Vagas</Link>
              <Link to="/empresas" className="hover:text-[#F7941D] transition-colors font-medium">Empresas</Link>
              <Link to="/areas" className="hover:text-[#F7941D] transition-colors font-medium">Áreas</Link>
              <Link to="/tecnologias" className="text-[#F7941D] font-medium">Tecnologias</Link>
              <Link to="/salarios" className="hover:text-[#F7941D] transition-colors font-medium">Salários</Link>
            </nav>
            <div className="flex items-center gap-4">
              <Link to="/candidato/login">
                <Button variant="ghost" className="text-white hover:text-[#F7941D]">Login</Button>
              </Link>
              <Link to="/candidato/cadastro">
                <Button className="bg-[#F7941D] hover:bg-[#E67E22] text-white">Cadastrar CV</Button>
              </Link>
            </div>
          </div>
        </div>
      </header>

      {/* Hero Section */}
      <div className="bg-gradient-to-r from-[#1F3B47] to-[#2C5F7C] text-white py-16">
        <div className="container mx-auto px-6">
          <div className="max-w-3xl">
            <h1 className="text-4xl md:text-5xl font-bold mb-4">
              Tecnologias em <span className="text-[#F7941D]">Alta</span>
            </h1>
            <p className="text-xl text-white/90 mb-8">
              Descubra as tecnologias mais demandadas pelo mercado e encontre vagas
            </p>
            <div className="flex gap-4 text-sm">
              <div className="flex items-center gap-2">
                <Code2 className="w-5 h-5 text-[#F7941D]" />
                <span>{technologies.length} tecnologias disponíveis</span>
              </div>
              <div className="flex items-center gap-2">
                <Briefcase className="w-5 h-5 text-[#F7941D]" />
                <span>{technologies.reduce((sum, t) => sum + t.jobs, 0).toLocaleString('pt-BR')}+ vagas</span>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* Filters */}
      <div className="bg-white shadow-sm border-b">
        <div className="container mx-auto px-6 py-6">
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div className="relative">
              <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5" />
              <Input
                type="text"
                placeholder="Buscar tecnologias..."
                value={searchTerm}
                onChange={(e) => setSearchTerm(e.target.value)}
                className="pl-10 h-12"
              />
            </div>
            <div>
              <select
                value={selectedCategory}
                onChange={(e) => setSelectedCategory(e.target.value)}
                className="w-full h-12 px-4 border rounded-md focus:border-[#F7941D] focus:outline-none"
              >
                {categories.map(category => (
                  <option key={category} value={category}>{category}</option>
                ))}
              </select>
            </div>
          </div>
        </div>
      </div>

      {/* Technologies Grid */}
      <div className="container mx-auto px-6 py-12">
        <div className="mb-6 flex items-center justify-between">
          <h2 className="text-2xl font-bold text-[#1F3B47]">
            {filteredTechnologies.length} {filteredTechnologies.length === 1 ? 'tecnologia encontrada' : 'tecnologias encontradas'}
          </h2>
          <div className="text-sm text-gray-600">
            Total: <span className="font-bold text-[#F7941D]">{totalJobs.toLocaleString('pt-BR')} vagas</span>
          </div>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4">
          {filteredTechnologies.map((tech, index) => (
            <Card key={index} className="hover:shadow-lg transition-shadow group">
              <CardContent className="p-6">
                <div className="flex items-start justify-between mb-3">
                  <div className="flex items-center gap-3">
                    <div className={`${tech.color} w-10 h-10 rounded-lg flex items-center justify-center flex-shrink-0`}>
                      <Code2 className="w-5 h-5 text-white" />
                    </div>
                    <div>
                      <h3 className="font-bold text-lg text-[#1F3B47]">{tech.name}</h3>
                      <p className="text-xs text-gray-500">{tech.category}</p>
                    </div>
                  </div>
                  <div className={`text-2xl ${getTrendColor(tech.trend)}`}>
                    {getTrendIcon(tech.trend)}
                  </div>
                </div>

                <div className="mb-4">
                  <div className="text-2xl font-bold text-[#F7941D] mb-1">
                    {tech.jobs.toLocaleString('pt-BR')}
                  </div>
                  <div className="text-xs text-gray-600">vagas disponíveis</div>
                </div>

                <Link to={`/vagas?tech=${encodeURIComponent(tech.name)}`}>
                  <Button className="w-full bg-[#F7941D] hover:bg-[#E67E22] text-white group-hover:gap-2 transition-all">
                    Ver Vagas
                  </Button>
                </Link>
              </CardContent>
            </Card>
          ))}
        </div>

        {filteredTechnologies.length === 0 && (
          <div className="text-center py-12">
            <Code2 className="w-16 h-16 text-gray-300 mx-auto mb-4" />
            <h3 className="text-xl font-semibold text-gray-600 mb-2">Nenhuma tecnologia encontrada</h3>
            <p className="text-gray-500">Tente ajustar os filtros de busca</p>
          </div>
        )}
      </div>

      {/* Footer */}
      <footer className="bg-[#1F3B47] text-white py-8 mt-12">
        <div className="container mx-auto px-6 text-center">
          <p className="text-white/80">© 2025 Portal ERP Jobs. Todos os direitos reservados.</p>
        </div>
      </footer>
    </div>
  )
}

